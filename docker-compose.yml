# docker-compose.yml - Docker Compose Configuration
version: '3.8'

services:
  # Main application
  app:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/llm_retrieval
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - REDIS_URL=redis://redis:6379
      - VECTOR_DB_TYPE=faiss
      - DEBUG=true
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - .:/app
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    networks:
      - llm-network

  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=llm_retrieval
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - llm-network

  # Redis for caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - llm-network

  # pgAdmin for database management (optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - llm-network

  # Redis Insight for Redis management (optional)
  redis-insight:
    image: redislabs/redisinsight:latest
    ports:
      - "8001:8001"
    volumes:
      - redis_insight_data:/db
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - llm-network

  # Nginx reverse proxy (optional for production)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - llm-network
    profiles:
      - production

volumes:
  postgres_data:
  redis_data:
  pgadmin_data:
  redis_insight_data:

networks:
  llm-network:
    driver: bridge

# Environment file template
# Create a .env file with the following variables:
# OPENAI_API_KEY=your_openai_api_key_here
# PINECONE_API_KEY=your_pinecone_key_here (optional)
# PINECONE_ENVIRONMENT=your_pinecone_env (optional)
# DATABASE_URL=postgresql://postgres:password@postgres:5432/llm_retrieval
# REDIS_URL=redis://redis:6379
# VECTOR_DB_TYPE=faiss
# DEBUG=true